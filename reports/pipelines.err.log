Traceback (most recent call last):
  File "/usr/local/lib/python3.9/dist-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.9/dist-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.9/dist-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/local/lib/python3.9/dist-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.9/dist-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.9/dist-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.9/dist-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import psycopg2
import pandas as pd
import orchest
# Connection parameters, yours will be different
param_dic = {
    "host"      : "postgresql-114550-0.cloudclusters.net",
    "database"  : "prosaindata0172",
    "port"      : '19984',
    "user"      : "ihsan",
    "password"  : "Ihsan1234"
}
def connect(params_dic):
    """ Connect to the PostgreSQL database server """
    conn = None
    try:
        # connect to the PostgreSQL server
        print('Connecting to the PostgreSQL database...')
        conn = psycopg2.connect(**params_dic)
    except (Exception, psycopg2.DatabaseError) as error:
        print(error)
        sys.exit(1) 
    print("Connection successful")
    return conn

def postgresql_to_dataframe(conn, select_query, column_names):
    """
    Tranform a SELECT query into a pandas dataframe
    """
    cursor = conn.cursor()
    try:
        cursor.execute(select_query)
    except (Exception, psycopg2.DatabaseError) as error:
        print("Error: %s" % error)
        cursor.close()
        return 1
    
    # Naturally we get a list of tupples
    tupples = cursor.fetchall()
    cursor.close()
    
    # We just need to turn it into a pandas dataframe
    df = pd.DataFrame(tupples, columns=column_names)
    return df

# Connect to the database
conn = connect(param_dic)
#identifikasi nama kolom
column_names = ["id","sepallength"]
#membuat variabel untuk menampilkan data sepallength dengan nama kolom
df = postgresql_to_dataframe(conn, "select * from sepallength", column_names)
print (df)
#membuat output sepallength yang akan dipakai pada penggabungan 4 kolom
orchest.output(df, name="sepallength")
------------------

[0;31m[0m
[0;31mModuleNotFoundError[0mTraceback (most recent call last)
[0;32m<ipython-input-1-45186b405b99>[0m in [0;36m<module>[0;34m[0m
[1;32m      1[0m [0;32mimport[0m [0mpsycopg2[0m[0;34m[0m[0;34m[0m[0m
[1;32m      2[0m [0;32mimport[0m [0mpandas[0m [0;32mas[0m [0mpd[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 3[0;31m [0;32mimport[0m [0morchest[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      4[0m [0;31m# Connection parameters, yours will be different[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m param_dic = {

[0;31mModuleNotFoundError[0m: No module named 'orchest'

[0;31m---------------------------------------------------------------------------[0;32m
NOTE: If your import is failing due to a missing package, you can
manually install dependencies using either !pip or !apt.

To view examples of installing some common dependencies, click the
"Open Examples" button below.
[0;31m---------------------------------------------------------------------------[0m

ModuleNotFoundError: No module named 'orchest'

